// ─────────────────────────────────────────────────────────────────────────────
/// Rules for how a player may finish a game
enum CheckoutRule {
  doubleOut,    // must finish on a double (including bull=50)
  extendedOut,  // must finish on a double or triple (or bull)
  exactOut,     // exact zero, any segment
  openFinish,   // any segment, sum >= remainingScore wins
}

// ─── Static Checkout Data ───────────────────────────────────────────────────

// Note: These lists should contain the best checkouts for a score,
// potentially using 1, 2, or 3 darts, pre-sorted by preference.
// The bestCheckouts function will filter based on remainingDarts.

// Checkouts for Double Out (must finish on a double)
// Scores like 1, 3, 5, etc., or high scores with no double out (e.g., 169, 168, 166, 165, 163, 162, 159) are omitted.
const Map<int, List<List<String>>> _doubleOutCheckouts = {
  170: [['T20', 'T20', 'DB']],
  167: [['T20', 'T19', 'DB']],
  164: [['T19', 'T19', 'DB']],
  161: [['T20', 'T17', 'DB']],
  160: [['T20', 'T20', 'D20']],
  158: [['T20', 'T20', 'D19']],
  157: [['T19', 'T20', 'D20']],
  156: [['T20', 'T20', 'D18']],
  155: [['T20', 'T19', 'D19']],
  154: [['T20', 'T18', 'D20']],
  153: [['T20', 'T19', 'D18']],
  152: [['T20', 'T20', 'D16']],
  151: [['T20', 'T17', 'D20']],
  150: [['T20', 'T18', 'D18']],
  149: [['T20', 'T19', 'D16']],
  148: [['T20', 'T20', 'D14']],
  147: [['T20', 'T17', 'D18']],
  146: [['T20', 'T18', 'D16']],
  145: [['T20', 'T15', 'D20']],
  144: [['T20', 'T20', 'D12']],
  143: [['T20', 'T17', 'D16']],
  142: [['T20', 'T14', 'D20']],
  141: [['T20', 'T15', 'D18']],
  140: [['T20', 'T16', 'D16']],
  139: [['T20', 'T13', 'D20']],
  138: [['T20', 'T16', 'D15']],
  137: [['T18', 'T17', 'D16']],
  136: [['T20', 'T20', 'D8']],
  135: [['T20', 'T13', 'D18']],
  134: [['T20', 'T14', 'D16']],
  133: [['T20', 'T19', 'D8']],
  132: [['T20', 'T16', 'D12']],
  131: [['T20', 'T13', 'D16']],
  130: [['T20', 'T18', 'D8']],
  129: [['T19', 'T16', 'D12']],
  128: [['T20', 'T20', 'D4']],
  127: [['T20', 'T17', 'D8']],
  126: [['T19', '19', 'DB']],
  125: [['T20', 'T19', 'D4']],
  124: [['T20', 'T16', 'D8']],
  123: [['T20', 'T13', 'D12']],
  122: [['T18', '18', 'DB']],
  121: [['T19', '14', 'DB']],
  120: [['T20', '20', 'D20']],
  119: [['T20', '19', 'D20']],
  118: [['T20', '18', 'D20']],
  117: [['T20', '17', 'D20']],
  116: [['T20', '16', 'D20']],
  115: [['T20', '15', 'D20']],
  114: [['T20', '14', 'D20']],
  113: [['T20', '13', 'D20']],
  112: [['T20', '12', 'D20']],
  111: [['T20', '19', 'D16']],
  110: [['T20', 'DB']],
  109: [['T19', '12', 'D20']],
  108: [['T20', '16', 'D16']],
  107: [['T19', 'DB']],
  106: [['T20', '10', 'D18']],
  105: [['T20', '13', 'D16']],
  104: [['T18', 'DB']],
  103: [['T19', '10', 'D18']],
  102: [['T20', '10', 'D16']],
  101: [['T17', 'DB']],
  100: [['T20', 'D20']],
  99:  [['T19', '10', 'D16']],
  98:  [['T20', 'D19']],
  97:  [['T19', 'D20']],
  96:  [['T20', 'D18']],
  95:  [['T19', 'D19']],
  94:  [['T18', 'D20']],
  93:  [['T19', 'D18']],
  92:  [['T20', 'D16']],
  91:  [['T17', 'D20']],
  90:  [['T18', 'D18']],
  89:  [['T19', 'D16']],
  88:  [['T16', 'D20']],
  87:  [['T17', 'D18']],
  86:  [['T18', 'D16']],
  85:  [['T15', 'D20']],
  84:  [['T16', 'D18']],
  83:  [['T17', 'D16']],
  82:  [['T14', 'D20']],
  81:  [['T15', 'D18']],
  80:  [['T16', 'D16']],
  79:  [['T13', 'D20']],
  78:  [['T18', 'D12']],
  77:  [['T15', 'D16']],
  76:  [['T20', 'D8']],
  75:  [['T13', 'D18']],
  74:  [['T14', 'D16']],
  73:  [['T19', 'D8']],
  72:  [['T16', 'D12']],
  71:  [['T13', 'D16']],
  70:  [['T18', 'D8']],
  69:  [['19', 'DB']],
  68:  [['T20', 'D4']],
  67:  [['T17', 'D8']],
  66:  [['T10', 'D18']],
  65:  [['T19', 'D4']],
  64:  [['T16', 'D8']],
  63:  [['T13', 'D12']],
  62:  [['T10', 'D16']],
  61:  [['T15', 'D8']],
  60:  [['20', 'D20']],
  59:  [['19', 'D20']],
  58:  [['18', 'D20']],
  57:  [['17', 'D20']],
  56:  [['16', 'D20']],
  55:  [['15', 'D20']],
  54:  [['14', 'D20']],
  53:  [['13', 'D20']],
  52:  [['12', 'D20']],
  51:  [['19', 'D16']],
  50:  [['DB']],
  49:  [['17', 'D16']],
  48:  [['16', 'D16']],
  47:  [['15', 'D16']],
  46:  [['6', 'D20']],
  45:  [['13', 'D16']],
  44:  [['12', 'D16']],
  43:  [['3', 'D20']],
  42:  [['10', 'D16']],
  41:  [['9', 'D16']],
  40:  [['D20']],
  39:  [['7', 'D16']],
  38:  [['D19']],
  37:  [['5', 'D16']],
  36:  [['D18']],
  35:  [['3', 'D16']],
  34:  [['D17']],
  33:  [['1', 'D16']],
  32:  [['D16']],
  31:  [['7', 'D12']],
  30:  [['D15']],
  29:  [['5', 'D12']],
  28:  [['D14']],
  27:  [['3', 'D12']],
  26:  [['D13']],
  25:  [['1', 'D12']],
  24:  [['D12']],
  23:  [['7', 'D8']],
  22:  [['D11']],
  21:  [['5', 'D8']],
  20:  [['D10']],
  19:  [['3', 'D8']],
  18:  [['D9']],
  17:  [['1', 'D8']],
  16:  [['D8']],
  15:  [['7', 'D4']],
  14:  [['D7']],
  13:  [['5', 'D4']],
  12:  [['D6']],
  11:  [['3', 'D4']],
  10:  [['D5']],
  9:   [['1', 'D4']],
  8:   [['D4']],
  7:   [['3', 'D2']],
  6:   [['D3']],
  5:   [['1', 'D2']],
  4:   [['D2']],
  3:   [['1', 'D1']],
  2:   [['D1']],
};

// Checkouts for Extended Out (must finish on a double or triple, or bull)
// DB counts as D. Finish priority D > DB > T.
const Map<int, List<List<String>>> _extendedOutCheckouts = {
  180: [['T20', 'T20', 'T20']],
  177: [['T20', 'T19', 'T20']],
  174: [['T20', 'T18', 'T20']],
  171: [['T20', 'T17', 'T20']],
  170: [['T20', 'T20', 'DB']],
  167: [['T20', 'T19', 'DB']],
  164: [['T19', 'T19', 'DB']],
  161: [['T20', 'T17', 'DB']],
  160: [['T20', 'T20', 'D20']],
  158: [['T20', 'T20', 'D19']],
  157: [['T19', 'T20', 'D20']],
  156: [['T20', 'T20', 'D18']],
  155: [['T20', 'T19', 'D19']],
  154: [['T20', 'T18', 'D20']],
  153: [['T20', 'T19', 'D18']],
  152: [['T20', 'T20', 'D16']],
  151: [['T20', 'T17', 'D20']],
  150: [['T20', 'T18', 'D18']],
  149: [['T20', 'T19', 'D16']],
  148: [['T20', 'T20', 'D14']],
  147: [['T20', 'T17', 'D18']],
  146: [['T20', 'T18', 'D16']],
  145: [['T20', 'T15', 'D20']],
  144: [['T20', 'T20', 'D12']],
  143: [['T20', 'T17', 'D16']],
  142: [['T20', 'T14', 'D20']],
  141: [['T20', 'T15', 'D18']],
  140: [['T20', 'T16', 'D16']],
  139: [['T20', 'T13', 'D20']],
  138: [['T20', 'T16', 'D15']],
  137: [['T18', 'T17', 'D16']],
  136: [['T20', 'T20', 'D8']],
  135: [['T20', 'T13', 'D18']],
  134: [['T20', 'T14', 'D16']],
  133: [['T20', 'T19', 'D8']],
  132: [['T20', 'T16', 'D12']],
  131: [['T20', 'T13', 'D16']],
  130: [['T20', 'T18', 'D8']],
  129: [['T19', 'T16', 'D12']],
  128: [['T20', 'T20', 'D4']],
  127: [['T20', 'T17', 'D8']],
  126: [['T19', '19', 'DB']],
  125: [['T20', 'T19', 'D4']],
  124: [['T20', 'T16', 'D8']],
  123: [['T20', 'T13', 'D12']],
  122: [['T18', '18', 'DB']],
  121: [['T19', '14', 'DB']],
  120: [['T20', 'T20']],
  119: [['T20', '19', 'D20']],
  118: [['T20', '18', 'D20']],
  117: [['T20', 'T19']],
  116: [['T20', '16', 'D20']],
  115: [['T20', '15', 'D20']],
  114: [['T20', 'T18']],
  113: [['T20', '13', 'D20']],
  112: [['T20', '12', 'D20']],
  111: [['T20', 'T17']],
  110: [['T20', 'DB']],
  109: [['T19', '12', 'D20']],
  108: [['T20', 'T16']],
  107: [['T19', 'DB']],
  106: [['T20', '10', 'D18']],
  105: [['T20', 'T15']],
  104: [['T18', 'DB']],
  103: [['T19', '10', 'D18']],
  102: [['T20', 'T14']],
  101: [['T17', 'DB']],
  100: [['T20', 'D20']],
  99:  [['T19', '10', 'D16']],
  98:  [['T20', 'D19']],
  97:  [['T19', 'D20']],
  96:  [['T20', 'D18']],
  95:  [['T19', 'D19']],
  94:  [['T18', 'D20']],
  93:  [['T19', 'D18']],
  92:  [['T20', 'D16']],
  91:  [['T17', 'D20']],
  90:  [['T18', 'D18']],
  89:  [['T19', 'D16']],
  88:  [['T16', 'D20']],
  87:  [['T17', 'D18']],
  86:  [['T18', 'D16']],
  85:  [['T15', 'D20']],
  84:  [['T16', 'D18']],
  83:  [['T17', 'D16']],
  82:  [['T14', 'D20']],
  81:  [['T15', 'D18']],
  80:  [['T16', 'D16']],
  79:  [['T13', 'D20']],
  78:  [['T18', 'D12']],
  77:  [['T15', 'D16']],
  76:  [['T20', 'D8']],
  75:  [['T13', 'D18']],
  74:  [['T14', 'D16']],
  73:  [['T19', 'D8']],
  72:  [['T16', 'D12']],
  71:  [['T13', 'D16']],
  70:  [['T18', 'D8']],
  69:  [['19', 'DB']],
  68:  [['T20', 'D4']],
  67:  [['T17', 'D8']],
  66:  [['T10', 'D18']],
  65:  [['T19', 'D4']],
  64:  [['T16', 'D8']],
  63:  [['T13', 'D12']],
  62:  [['T10', 'D16']],
  61:  [['T15', 'D8']],
  60:  [['T20']],
  59:  [['19', 'D20']],
  58:  [['18', 'D20']],
  57:  [['T19']],
  56:  [['16', 'D20']],
  55:  [['15', 'D20']],
  54:  [['T18']],
  53:  [['13', 'D20']],
  52:  [['12', 'D20']],
  51:  [['T17']],
  50:  [['DB']],
  49:  [['17', 'D16']],
  48:  [['T16']],
  47:  [['15', 'D16']],
  46:  [['6', 'D20']],
  45:  [['T15']],
  44:  [['12', 'D16']],
  43:  [['3', 'D20']],
  42:  [['T14']],
  41:  [['9', 'D16']],
  40:  [['D20']],
  39:  [['T13']],
  38:  [['D19']],
  37:  [['5', 'D16']],
  36:  [['D18']],
  35:  [['3', 'D16']],
  34:  [['D17']],
  33:  [['T11']],
  32:  [['D16']],
  31:  [['7', 'D12']],
  30:  [['D15']],
  29:  [['5', 'D12']],
  28:  [['D14']],
  27:  [['T9']],
  26:  [['D13']],
  25:  [['1', 'D12']],
  24:  [['D12']],
  23:  [['7', 'D8']],
  22:  [['D11']],
  21:  [['T7']],
  20:  [['D10']],
  19:  [['3', 'D8']],
  18:  [['D9']],
  17:  [['1', 'D8']],
  16:  [['D8']],
  15:  [['T5']],
  14:  [['D7']],
  13:  [['5', 'D4']],
  12:  [['D6']],
  11:  [['3', 'D4']],
  10:  [['D5']],
  9:   [['T3']],
  8:   [['D4']],
  7:   [['3', 'D2']],
  6:   [['D3']],
  5:   [['1', 'D2']],
  4:   [['D2']],
  3:   [['T3']],
  2:   [['D1']],
};

// Checkouts for Exact Out (exact zero, any segment)
// Priority for last dart (if multiple options for same #darts): S > D > Bull > T
const Map<int, List<List<String>>> _exactOutCheckouts = {
  180: [['T20', 'T20', 'T20']],
  177: [['T20', 'T19', 'T20']],
  174: [['T20', 'T18', 'T20']],
  171: [['T20', 'T17', 'T20']],
  170: [['T20', 'T20', 'DB']],
  167: [['T20', 'T19', 'DB']],
  164: [['T19', 'T19', 'DB']],
  161: [['T20', 'T17', 'DB']],
  160: [['T20', 'T20', 'D20']],
  158: [['T20', 'T20', 'D19']],
  157: [['T19', 'T20', 'D20']],
  156: [['T20', 'T20', 'D18']],
  155: [['T20', 'T19', 'D19']],
  154: [['T20', 'T18', 'D20']],
  153: [['T20', 'T19', 'D18']],
  152: [['T20', 'T20', 'D16']],
  151: [['T20', 'T17', 'D20']],
  150: [['T20', 'T18', 'D18']],
  149: [['T20', 'T19', 'D16']],
  148: [['T20', 'T20', 'D14']],
  147: [['T20', 'T17', 'D18']],
  146: [['T20', 'T18', 'D16']],
  145: [['T20', 'T15', 'D20']],
  144: [['T20', 'T20', 'D12']],
  143: [['T20', 'T17', 'D16']],
  142: [['T20', 'T14', 'D20']],
  141: [['T20', 'T15', 'D18']],
  140: [['T20', 'T16', 'D16']],
  139: [['T20', 'T13', 'D20']],
  138: [['T20', 'T16', 'D15']],
  137: [['T18', 'T17', 'D16']],
  136: [['T20', 'T20', 'D8']],
  135: [['T20', 'T13', 'D18']],
  134: [['T20', 'T14', 'D16']],
  133: [['T20', 'T19', 'D8']],
  132: [['T20', 'T16', 'D12']],
  131: [['T20', 'T13', 'D16']],
  130: [['T20', 'T18', 'D8']],
  129: [['T19', 'T16', 'D12']],
  128: [['T20', 'T20', 'D4']],
  127: [['T20', 'T17', 'D8']],
  126: [['T19', 'T20', '9']],
  125: [['T20', 'T19', 'D4']],
  124: [['T20', 'T16', 'D8']],
  123: [['T20', 'T13', 'D12']],
  122: [['T18', 'T20', '5']],
  121: [['T19', 'T20', '4']],
  120: [['T20', 'T20']],
  119: [['T20', 'D20', '19']],
  118: [['T20', 'D20', '18']],
  117: [['T20', 'T19']],
  116: [['T20', 'D20', '16']],
  115: [['T20', 'D20', '15']],
  114: [['T20', 'T18']],
  113: [['T20', 'D20', '13']],
  112: [['T20', 'D20', '12']],
  111: [['T20', 'T17']],
  110: [['T20', 'DB']],
  109: [['T19', 'D20', '12']],
  108: [['T20', 'T16']],
  107: [['T19', 'DB']],
  106: [['T20', 'D18', '10']],
  105: [['T20', 'T15']],
  104: [['T18', 'DB']],
  103: [['T19', 'D18', '10']],
  102: [['T20', 'T14']],
  101: [['T17', 'DB']],
  100: [['T20', 'D20']],
  99:  [['T19', 'D16', '10']],
  98:  [['T20', 'D19']],
  97:  [['T19', 'D20']],
  96:  [['T20', 'D18']],
  95:  [['T19', 'D19']],
  94:  [['T18', 'D20']],
  93:  [['T19', 'D18']],
  92:  [['T20', 'D16']],
  91:  [['T17', 'D20']],
  90:  [['T18', 'D18']],
  89:  [['T19', 'D16']],
  88:  [['T16', 'D20']],
  87:  [['T17', 'D18']],
  86:  [['T18', 'D16']],
  85:  [['T15', 'D20']],
  84:  [['T16', 'D18']],
  83:  [['T17', 'D16']],
  82:  [['T14', 'D20']],
  81:  [['T15', 'D18']],
  80:  [['T20', '20']],
  79:  [['T20', '19']],
  78:  [['T20', '18']],
  77:  [['T20', '17']],
  76:  [['T20', '16']],
  75:  [['T20', '15']],
  74:  [['T20', '14']],
  73:  [['T20', '13']],
  72:  [['T20', '12']],
  71:  [['T20', '11']],
  70:  [['T20', '10']],
  69:  [['T20', '9']],
  68:  [['T20', '8']],
  67:  [['T20', '7']],
  66:  [['T20', '6']],
  65:  [['T20', '5']],
  64:  [['T20', '4']],
  63:  [['T20', '3']],
  62:  [['T20', '2']],
  61:  [['T20', '1']],
  60:  [['T20']],
  59:  [['D20', '19']],
  58:  [['D20', '18']],
  57:  [['T19']],
  56:  [['D20', '16']],
  55:  [['D20', '15']],
  54:  [['T18']],
  53:  [['D20', '13']],
  52:  [['D20', '12']],
  51:  [['T17']],
  50:  [['DB']],
  49:  [['D16', '17']],
  48:  [['T16']],
  47:  [['D16', '15']],
  46:  [['D20', '6']],
  45:  [['T15']],
  44:  [['D16', '12']],
  43:  [['D20', '3']],
  42:  [['T14']],
  41:  [['D16', '9']],
  40:  [['D20']],
  39:  [['T13']],
  38:  [['D19']],
  37:  [['D16', '5']],
  36:  [['D18']],
  35:  [['D16', '3']],
  34:  [['D17']],
  33:  [['T11']],
  32:  [['D16']],
  31:  [['D12', '7']],
  30:  [['D15']],
  29:  [['D12', '5']],
  28:  [['D14']],
  27:  [['T9']],
  26:  [['D13']],
  25:  [['25']],
  24:  [['D12']],
  23:  [['D8', '7']],
  22:  [['D11']],
  21:  [['T7']],
  20:  [['20']],
  19:  [['19']],
  18:  [['18']],
  17:  [['17']],
  16:  [['16']],
  15:  [['15']],
  14:  [['14']],
  13:  [['13']],
  12:  [['12']],
  11:  [['11']],
  10:  [['10']],
  9:   [['9']],
  8:   [['8']],
  7:   [['7']],
  6:   [['6']],
  5:   [['5']],
  4:   [['4']],
  3:   [['3']],
  2:   [['2']],
  1:   [['1']],
};

// Checkouts for Open Finish (any segment, sum >= remainingScore wins)
// Prioritizes exact finishes. For exact, simpler types (S > D > Bull > T).
// If overshooting, prefers closest to target.
const Map<int, List<List<String>>> _openFinishCheckouts = {
  180: [['T20', 'T20', 'T20']],
  177: [['T20', 'T20', 'T20']],
  174: [['T20', 'T20', 'T20']],
  171: [['T20', 'T20', 'T20']],
  170: [['T20', 'T20', 'DB']],
  167: [['T20', 'T20', 'DB']],
  164: [['T20', 'T20', 'DB']],
  161: [['T20', 'T20', 'DB']],
  160: [['T20', 'T20', 'DB']],
  158: [['T20', 'T20', 'DB']],
  157: [['T20', 'T20', 'DB']],
  156: [['T20', 'T20', 'DB']],
  155: [['T20', 'T20', 'DB']],
  154: [['T20', 'T20', 'DB']],
  153: [['T20', 'T20', 'DB']],
  152: [['T20', 'T20', 'DB']],
  151: [['T20', 'T20', 'DB']],
  150: [['T20', 'T20', 'DB']],
  149: [['T20', 'T20', 'DB']],
  148: [['T20', 'T20', 'DB']],
  147: [['T20', 'T20', 'DB']],
  146: [['T20', 'T20', 'DB']],
  145: [['T20', 'T20', 'DB']],
  144: [['T20', 'T20', 'DB']],
  143: [['T20', 'T20', 'DB']],
  142: [['T20', 'T20', 'DB']],
  141: [['T20', 'T20', 'DB']],
  140: [['T20', 'T20', '20']],
  139: [['T20', 'T20', '20']],
  138: [['T20', 'T20', '20']],
  137: [['T20', 'T20', '20']],
  136: [['T20', 'T20', '20']],
  135: [['T20', 'T20', '20']],
  134: [['T20', 'T20', '20']],
  133: [['T20', 'T20', '20']],
  132: [['T20', 'T20', '20']],
  131: [['T20', 'T20', '20']],
  130: [['T20', 'T20', '20']],
  129: [['T20', 'T20', '20']],
  128: [['T20', 'T20', '20']],
  127: [['T20', 'T20', '20']],
  126: [['T20', 'T20', '20']],
  125: [['T20', 'T20', '20']],
  124: [['T20', 'T20', '20']],
  123: [['T20', 'T20', '20']],
  122: [['T20', 'T20', '20']],
  121: [['T20', 'T20', '20']],
  120: [['T20', 'T20']],
  119: [['T20', 'T20']],
  118: [['T20', 'T20']],
  117: [['T20', 'T20']],
  116: [['T20', 'T20']],
  115: [['T20', 'T20']],
  114: [['T20', 'T20']],
  113: [['T20', 'T20']],
  112: [['T20', 'T20']],
  111: [['T20', 'T20']],
  110: [['T20', 'DB']],
  109: [['T20', 'DB']],
  108: [['T20', 'DB']],
  107: [['T20', 'DB']],
  106: [['T20', 'DB']],
  105: [['T20', 'DB']],
  104: [['T20', 'DB']],
  103: [['T20', 'DB']],
  102: [['T20', 'DB']],
  101: [['T20', 'DB']],
  100: [['T20', 'DB']],
  99:  [['T20', 'DB']],
  98:  [['T20', 'DB']],
  97:  [['T20', 'DB']],
  96:  [['T20', 'DB']],
  95:  [['T20', 'DB']],
  94:  [['T20', 'DB']],
  93:  [['T20', 'DB']],
  92:  [['T20', 'DB']],
  91:  [['T20', 'DB']],
  90:  [['T20', 'DB']],
  89:  [['T20', 'DB']],
  88:  [['T20', 'DB']],
  87:  [['T20', 'DB']],
  86:  [['T20', 'DB']],
  85:  [['T20', 'DB']],
  84:  [['T20', 'DB']],
  83:  [['T20', 'DB']],
  82:  [['T20', 'DB']],
  81:  [['T20', 'DB']],
  80:  [['T20', '20']],
  79:  [['T20', '20']],
  78:  [['T20', '20']],
  77:  [['T20', '20']],
  76:  [['T20', '20']],
  75:  [['T20', '20']],
  74:  [['T20', '20']],
  73:  [['T20', '20']],
  72:  [['T20', '20']],
  71:  [['T20', '20']],
  70:  [['T20', '20']],
  69:  [['T20', '20']],
  68:  [['T20', '20']],
  67:  [['T20', '20']],
  66:  [['T20', '20']],
  65:  [['T20', '20']],
  64:  [['T20', '20']],
  63:  [['T20', '20']],
  62:  [['T20', '20']],
  61:  [['T20', '20']],
  60:  [['T20']],
  59:  [['T20']],
  58:  [['T20']],
  57:  [['T20']],
  56:  [['T20']],
  55:  [['T20']],
  54:  [['T20']],
  53:  [['T20']],
  52:  [['T20']],
  51:  [['T20']],
  50:  [['DB']],
  49:  [['DB']],
  48:  [['DB']],
  47:  [['DB']],
  46:  [['DB']],
  45:  [['DB']],
  44:  [['DB']],
  43:  [['DB']],
  42:  [['DB']],
  41:  [['DB']],
  40:  [['DB']],
  39:  [['DB']],
  38:  [['DB']],
  37:  [['DB']],
  36:  [['DB']],
  35:  [['DB']],
  34:  [['DB']],
  33:  [['DB']],
  32:  [['DB']],
  31:  [['DB']],
  30:  [['DB']],
  29:  [['DB']],
  28:  [['DB']],
  27:  [['DB']],
  26:  [['DB']],
  25:  [['DB']],
  24:  [['DB']],
  23:  [['DB']],
  22:  [['DB']],
  21:  [['DB']],
  20:  [['20']],
  19:  [['20']],
  18:  [['20']],
  17:  [['20']],
  16:  [['20']],
  15:  [['20']],
  14:  [['20']],
  13:  [['20']],
  12:  [['20']],
  11:  [['20']],
  10:  [['20']],
  9:   [['20']],
  8:   [['20']],
  7:   [['20']],
  6:   [['20']],
  5:   [['20']],
  4:   [['20']],
  3:   [['20']],
  2:   [['20']],
  1:   [['20']],
};


// ─── New bestCheckouts function ─────────────────────────────────────────────

/// Returns the top [limit] checkout sequences, or `[]` if none.
/// Looks up checkouts from pre-defined static lists.
List<List<String>> bestCheckouts(
  int remainingScore,
  int remainingDarts,
  CheckoutRule rule, {
  int limit = 1,
}) {
  Map<int, List<List<String>>> selectedCheckoutMap;

  switch (rule) {
    case CheckoutRule.doubleOut:
      selectedCheckoutMap = _doubleOutCheckouts;
      break;
    case CheckoutRule.extendedOut:
      selectedCheckoutMap = _extendedOutCheckouts;
      break;
    case CheckoutRule.exactOut:
      selectedCheckoutMap = _exactOutCheckouts;
      break;
    case CheckoutRule.openFinish:
      selectedCheckoutMap = _openFinishCheckouts;
      break;
    // No default needed as CheckoutRule is exhaustive.
  }

  // Use .[]? for a nullable lookup, then provide an empty list if null.
  List<List<String>> checkoutsForScore = selectedCheckoutMap[remainingScore] ?? [];

  if (checkoutsForScore.isEmpty) {
    return []; // No pre-defined checkout found for this score under this rule
  }

  // Filter checkouts based on the number of darts the player has remaining
  final validCheckouts = checkoutsForScore
      .where((checkoutSequence) => checkoutSequence.length <= remainingDarts)
      .toList();

  // The static lists should ideally be pre-sorted by preference.
  // If not pre-sorted, you might need to add sorting logic here based on rule-specific preferences.
  // For now, assuming pre-sorted lists.
  return validCheckouts.take(limit).toList();
}
